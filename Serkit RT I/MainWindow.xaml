<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:local="clr-namespace:Serkit_RT_I" mc:Ignorable="d" x:Name="SerkitWindow" x:Class="Serkit_RT_I.MainWindow"
        Title="MainWindow" Height="500" Width="800" Background="#FF282828" AllowsTransparency="True" WindowStyle="None" BorderThickness="1" BorderBrush="#FFBFBFBF" StateChanged="SerkitWindow_StateChanged" Icon="Images/logo-256x256.ico" SourceInitialized="SerkitWindow_SourceInitialized" PreviewMouseMove="SerkitWindow_PreviewMouseMove" KeyDown="SerkitWindow_KeyDown" KeyUp="SerkitWindow_KeyUp" SizeChanged="SerkitWindow_SizeChanged">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFFAFAFA"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF5495D8"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="ExitButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarButtonHover" Color="#B2B4D2F0"/>
        <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D"/>
        <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,0,3,3" Background="{TemplateBinding Background}">
                            <Canvas Width="7" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="2,7,2,2" Height="6" HorizontalAlignment="Right">
                                <Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
                                <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
                                <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFEEF5FD"/>
        <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,3,3,0" Background="{TemplateBinding Background}">
                            <Canvas Width="6" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="3,2,2,2" Height="7" HorizontalAlignment="Right">
                                <Path Data="M 0 0.5 L 5 0.5" Stroke="#FF4F4F4F"/>
                                <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="#FF515151"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5"/>
        <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFEEF5FD"/>
        <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="Transparent" Margin="0,0,3,0">
                            <Image Margin="-5,-5,1,-6" Source="Images/Dotted-Toolbar.png" Stretch="None"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="SizeAll"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="0,0,11,0"/>
            <Setter Property="CornerRadius" Value="3,3,3,3"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="CornerRadius" Value="0,0,0,0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FlatToolBarStyle" TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" Margin="11,1,1,1" SnapsToDevicePixels="true">
                            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" Background="{x:Null}" Margin="0" Padding="0"/>
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
                                    <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="ToolBarSubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="0,0,0,1" RenderOptions.ClearTypeHint="Enabled" Background="#FFE6E6E6">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb x:Name="ToolBarThumb" Margin="0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" Width="13" Background="{x:Null}"/>
                                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen" Value="true">
                                <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                            </Trigger>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                                <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                                <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                                <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#80DADADA"/>
        <SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#90006CD9"/>
        <SolidColorBrush x:Key="ToolBarButtonPressed" Color="#FF5495D8"/>
        <Style x:Key="FlatToolbarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonPressedBorder}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlatMenuItemStyle1" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="FlatTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="{x:Null}" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" BorderThickness="0,1,0,0">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect Direction="90" BlurRadius="20" Opacity="0.6" ShadowDepth="5" RenderingBias="Quality"/>
    </Window.Effect>
    <Grid x:Name="Workgrid" Background="#FFF0F0F0">
        <StatusBar x:Name="StatusBar" Height="20" Margin="0" VerticalAlignment="Bottom" Background="#FF2388DC" Panel.ZIndex="1"/>
        <Grid Height="28" VerticalAlignment="Top" Background="#FFF0F0F0" x:Name="Titlebar" Panel.ZIndex="1" Margin="0" >
            <Button x:Name="Exit" Content="&#xE0A4;" Margin="0" Width="32" Height="28" FontFamily="Segoe UI Symbol" IsCancel="True" Background="{x:Null}" BorderThickness="0" BorderBrush="{x:Null}" FontSize="10" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="1" Click="Exit_Click" Style="{DynamicResource ExitButtonStyle}" ToolTip="Exit"/>
            <Button x:Name="Maximize" Content="&#xE155;" HorizontalAlignment="Right" Margin="0,0,32,0" VerticalAlignment="Bottom" Width="32" Height="28" FontFamily="Segoe UI Symbol" IsCancel="True" Background="{x:Null}" BorderThickness="0" BorderBrush="{x:Null}" FontSize="10" Panel.ZIndex="1" Style="{DynamicResource ExitButtonStyle}" Click="Maximize_Click" ToolTip="Maximise"/>
            <Button x:Name="Minimize" Content="&#xE0B8;" HorizontalAlignment="Right" Margin="0,0,64,0" VerticalAlignment="Bottom" Width="32" Height="28" FontFamily="Segoe UI Symbol" IsCancel="True" Background="{x:Null}" BorderThickness="0" BorderBrush="{x:Null}" FontSize="10" Panel.ZIndex="1" Style="{DynamicResource ExitButtonStyle}" Click="Minimize_Click" ToolTip="Minimize"/>
            <Image x:Name="WindowLogo" HorizontalAlignment="Left" Height="24" VerticalAlignment="Top" Width="24" Source="Images/logo-64x64.png" Margin="5,2,0,0" Panel.ZIndex="1"/>
            <TextBlock x:Name="WindowTitle" HorizontalAlignment="Left" Margin="34,3,0,0" TextWrapping="Wrap" Text="Serkit" VerticalAlignment="Top" Width="480" FontSize="16" Panel.ZIndex="-2"/>
            <Rectangle x:Name="MoveRectangle" Fill="Transparent"
				Grid.Row="0" Grid.Column="0" StrokeThickness="0" Margin="-1,-1,-1,0" Panel.ZIndex="-1" d:IsHidden="True" PreviewMouseDown="MoveRectangle_PreviewMouseDown" PreviewMouseUp="MoveRectangle_PreviewMouseUp"/>
        </Grid>
        <Grid x:Name="MenuBar" Height="44" Margin="0,28,0,0" VerticalAlignment="Top" Background="#FFF0F0F0" Panel.ZIndex="1">
            <Menu Height="16" VerticalAlignment="Top" Background="{x:Null}" BorderThickness="2,0,0,0">
                <MenuItem x:Name="FileMenu" Header="FILE" Background="{x:Null}" BorderThickness="0" Margin="0" Padding="8,0,0,0" Width="42" HorizontalContentAlignment="Center" Height="16" Style="{DynamicResource FlatMenuItemStyle}">
                    <MenuItem x:Name="NewMenuItem" Header="New" HorizontalAlignment="Left" Width="180" BorderThickness="0" Style="{DynamicResource FlatMenuItemStyle1}" ItemContainerStyle="{DynamicResource FlatMenuItemStyle}" Background="{x:Null}" Height="24" InputGestureText="Ctrl+N">
                        <MenuItem.Icon>
                            <Label Content="&#xE132;" FontFamily="Segoe UI Symbol" Padding="5,0,0,0" Background="{x:Null}" Foreground="#FFC8C8C8" Margin="0,0,-8,0" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="OpenMenuItem" Header="Open" HorizontalAlignment="Left" Width="180" BorderThickness="0" Style="{DynamicResource FlatMenuItemStyle}" ItemContainerStyle="{DynamicResource FlatMenuItemStyle}" Background="{x:Null}" Height="24" InputGestureText="Ctrl+O">
                        <MenuItem.Icon>
                            <Label Content="&#xE197;" FontFamily="Segoe UI Symbol" Padding="5,0,0,0" Background="{x:Null}" Foreground="#FFFFD392" FontSize="13" Margin="0,0,-8,0" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="SaveMenuItem" Header="Save" HorizontalAlignment="Left" Width="180" BorderThickness="0" Style="{DynamicResource FlatMenuItemStyle}" ItemContainerStyle="{DynamicResource FlatMenuItemStyle}" Background="{x:Null}" Height="24" InputGestureText="Ctrl+S">
                        <MenuItem.Icon>
                            <Label Content="&#xE105;" FontFamily="Segoe UI Symbol" Padding="5,0,0,0" Background="{x:Null}" Foreground="#FF4791CF" Margin="0,0,-8,0" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="1" RenderTransformOrigin="0.5,0.5">
                        <Separator.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="-1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Separator.RenderTransform>
                    </Separator>
                    <MenuItem x:Name="ExitMenuItem" Header="Exit" HorizontalAlignment="Left" Width="180" BorderThickness="0" Style="{DynamicResource FlatMenuItemStyle}" ItemContainerStyle="{DynamicResource FlatMenuItemStyle}" Background="{x:Null}" Height="24" InputGestureText="Alt+F4">
                        <MenuItem.Icon>
                            <Label Content="&#xE10A;" FontFamily="Segoe UI Symbol" Padding="5,0,0,0" Background="{x:Null}" Foreground="#FFFF7A7A" Margin="0,0,-8,0" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="EditMenu" Header="EDIT" Background="{x:Null}" BorderThickness="0" Margin="0" Padding="8,0,0,0" Width="42" HorizontalContentAlignment="Center" Height="16" Style="{DynamicResource FlatMenuItemStyle}"/>
                <MenuItem x:Name="ToolsMenu" Header="TOOLS" Background="{x:Null}" BorderThickness="0" Margin="0" Padding="8,0,0,0" Width="56" HorizontalContentAlignment="Center" Style="{DynamicResource FlatMenuItemStyle}" Height="16"/>
                <MenuItem x:Name="ViewMenu" Header="VIEW" Background="{x:Null}" BorderThickness="0" Margin="0" Padding="8,0,0,0" Width="47" HorizontalContentAlignment="Center" Style="{DynamicResource FlatMenuItemStyle}" Height="16"/>
                <MenuItem x:Name="CircuitMenu" Header="CIRCUIT" Background="{x:Null}" BorderThickness="0" Margin="0" Width="59" Padding="8,0,0,0" HorizontalContentAlignment="Center" Style="{DynamicResource FlatMenuItemStyle}" Height="16"/>
            </Menu>
            <ToolBarTray Margin="0,16,0,0" Background="{x:Null}">
                <ToolBar x:Name="MainToolbar" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Margin="0,0,-113,-23" Style="{DynamicResource FlatToolBarStyle}" Background="{x:Null}" Width="113">
                    <Button x:Name="NewToolbarButton" Height="20" VerticalAlignment="Stretch" Width="24" FontFamily="Segoe UI Symbol" FontSize="16" Margin="0,0,0,-1" HorizontalAlignment="Left" Padding="0" Style="{DynamicResource FlatToolbarButtonStyle}">
                        <Grid Height="19" Width="17" d:IsLocked="True">
                            <Label Content="&#xE132;" Padding="0" Foreground="#FFC8C8C8" FontSize="14"/>
                        </Grid>
                    </Button>
                    <Button x:Name="OpenToolbarButton" Height="20" VerticalAlignment="Stretch" Width="24" FontFamily="Segoe UI Symbol" FontSize="16" Margin="0" HorizontalAlignment="Left" Padding="0" Style="{DynamicResource FlatToolbarButtonStyle}">
                        <Grid Height="19" Width="17" d:IsLocked="True">
                            <Label Content="&#xE197;" Padding="0" Foreground="#FFFFD392" FontSize="14"/>
                        </Grid>
                    </Button>
                    <Button x:Name="SaveToolbarButton" Height="20" VerticalAlignment="Stretch" Width="24" FontFamily="Segoe UI Symbol" FontSize="16" Margin="0,0,0,-1" HorizontalAlignment="Left" Padding="0" Style="{DynamicResource FlatToolbarButtonStyle}">
                        <Grid Height="19" Width="17" d:IsLocked="True">
                            <Label Content="&#xE105;" Padding="0" Foreground="#FF4791CF" FontSize="14" Background="{x:Null}"/>
                        </Grid>
                    </Button>
                </ToolBar>
                <ToolBar x:Name="WindowToolbar" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Margin="114,0,-226,-23" Style="{DynamicResource FlatToolBarStyle}" Background="{x:Null}" Width="112">
                    <Button x:Name="AddWindowToolbarButton" Height="20" VerticalAlignment="Stretch" Width="24" FontFamily="Segoe UI Symbol" FontSize="16" Margin="0,0,0,-1" HorizontalAlignment="Left" Padding="0" Style="{DynamicResource FlatToolbarButtonStyle}" Click="AddWindowToolbarButton_Click">
                        <Grid Height="19" Width="17" d:IsLocked="True">
                            <Label Content="+" Padding="0" Foreground="#FF83CB8D" FontSize="24" Margin="0,-10,0,0" Background="{x:Null}"/>
                        </Grid>
                    </Button>
                    <Button x:Name="CloseWindowToolbarButton" Height="20" VerticalAlignment="Stretch" Width="24" FontFamily="Segoe UI Symbol" FontSize="16" Margin="0,0,0,-1" HorizontalAlignment="Left" Padding="0" Style="{DynamicResource FlatToolbarButtonStyle}">
                        <Grid Height="19" Width="17" d:IsLocked="True">
                            <Label Content="&#xE10A;" Padding="0" Foreground="#FFFFA3A3" FontSize="14" Background="{x:Null}"/>
                        </Grid>
                    </Button>
                    <Button x:Name="AddCircuitWindowToolbarButton" Height="20" VerticalAlignment="Stretch" Width="24" FontFamily="Segoe UI Symbol" FontSize="16" HorizontalAlignment="Left" Padding="0" Style="{DynamicResource FlatToolbarButtonStyle}" Click="AddCircuitWindowToolbarButton_Click" ToolTip="New Circuit">
                        <Grid Height="19" Width="17" d:IsLocked="True">
                            <Label Content="&#xE0D1;" Padding="0" Foreground="#FF6E9EE2" FontSize="10" Background="{x:Null}" Margin="0,3,4,1"/>
                            <Label Content="+" Padding="0" Foreground="#FF83CB8D" FontSize="14" Margin="9,-6,-9,2" Background="{x:Null}"/>
                        </Grid>
                    </Button>
                </ToolBar>
            </ToolBarTray>
        </Grid>
        <Grid Margin="0,72,0,20">
            <Canvas x:Name="CanvasView" Margin="0,24,0,0" Background="#FFF0F0F0"/>
            <Grid x:Name="TaskBar" Height="24" VerticalAlignment="Top" d:IsLocked="True">
                <DockPanel x:Name="WindowTabBar" LastChildFill="False"/>
            </Grid>
        </Grid>
        <Grid x:Name="ResizeGrid" Panel.ZIndex="2" d:IsHidden="True">
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		VerticalAlignment="Top"
        		Height="2"
        		x:Name="TopRect"
        		Margin="2,0" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		x:Name="BottomRect"
        		Height="2"
        		VerticalAlignment="Bottom"
        		Margin="2,0" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		HorizontalAlignment="Left"
        		Margin="0,2"
        		Width="2"
        		x:Name="LeftRect" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown"/>
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		Margin="0,2"
        		Width="2"
        		HorizontalAlignment="Right"
        		x:Name="RightRect" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		HorizontalAlignment="Left"
        		VerticalAlignment="Bottom"
        		Width="3"
        		Height="3"
        		x:Name="BottomLeft" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		VerticalAlignment="Bottom"
        		Height="3"
        		Width="3"
        		HorizontalAlignment="Right"
        		x:Name="BottomRight" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		HorizontalAlignment="Right"
        		Width="3"
        		Height="3"
        		VerticalAlignment="Top"
        		x:Name="TopRight" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
            <Rectangle
        		Stroke="{x:Null}"
        		Fill="Transparent"
        		HorizontalAlignment="Left"
        		Width="3"
        		VerticalAlignment="Top"
        		Height="3"
        		x:Name="TopLeft" MouseMove="ResizeRectangle_MouseMove" PreviewMouseDown="ResizeRectangle_PreviewMouseDown" />
        </Grid>
    </Grid>
</Window>
